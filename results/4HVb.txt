sbc-bench v0.9.47 Pine64 RockPro64 v2.1 (Sun, 01 Oct 2023 18:51:11 +0200)

Distributor ID:	Debian
Description:	Armbian 23.8.3 bookworm
Release:	12
Codename:	bookworm
Build system:   https://github.com/armbian/build, 23.8.1, RockPro 64, rockchip64, rockchip64

/usr/bin/gcc (Debian 12.2.0-14) 12.2.0

Uptime: 18:51:11 up 3 min,  2 users,  load average: 0.39, 0.44, 0.20,  31.7Â°C,  216875449

Linux 6.4.13-edge-rockchip64 (rockpro64) 	10/01/23 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           2.46    0.02    4.02    1.50    0.00   92.00

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1          30.27      1170.59       432.50         0.00     240615      88901          0
zram0             0.27         5.76         0.02         0.00       1184          4          0
zram1             0.96         2.00        11.95         0.00        412       2456          0

               total        used        free      shared  buff/cache   available
Mem:           3.8Gi       246Mi       3.5Gi        13Mi        93Mi       3.5Gi
Swap:          1.9Gi          0B       1.9Gi

Filename				Type		Size		Used		Priority
/dev/zram0                              partition	1978120		0		5

##########################################################################

Checking cpufreq OPP for cpu0-cpu3 (Cortex-A53):

Cpufreq OPP: 1416    Measured: 1412 (1412.940/1412.816/1412.798)
Cpufreq OPP: 1200    Measured: 1196 (1197.064/1196.914/1196.884)
Cpufreq OPP: 1008    Measured: 1004 (1004.936/1004.836/1004.823)
Cpufreq OPP:  816    Measured:  812    (812.997/812.967/812.926)
Cpufreq OPP:  600    Measured:  597    (597.098/597.068/596.986)
Cpufreq OPP:  408    Measured:  405    (405.129/404.992/404.906)

Checking cpufreq OPP for cpu4-cpu5 (Cortex-A72):

Cpufreq OPP: 1800    Measured: 1798 (1798.387/1798.387/1798.252)
Cpufreq OPP: 1608    Measured: 1606 (1606.368/1606.348/1606.308)
Cpufreq OPP: 1416    Measured: 1414 (1414.367/1414.350/1414.279)
Cpufreq OPP: 1200    Measured: 1198 (1198.392/1198.377/1198.332)
Cpufreq OPP: 1008    Measured: 1006 (1006.374/1006.349/1006.336)
Cpufreq OPP:  816    Measured:  814    (814.380/814.370/814.309)
Cpufreq OPP:  600    Measured:  598    (598.435/598.405/598.368)
Cpufreq OPP:  408    Measured:  406    (406.437/406.422/406.386)

##########################################################################

Hardware sensors:

tcpm_source_psy_4_0022-i2c-4-22
in0:           0.00 V  (min =  +0.00 V, max =  +0.00 V)
curr1:         0.00 A  (max =  +0.00 A)

cpu_thermal-virtual-0
temp1:        +30.6 C  

gpu_thermal-virtual-0
temp1:        +29.4 C  

##########################################################################

Executing benchmark on cpu0 (Cortex-A53):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :   1595.5 MB/s (3, 4.8%)
 C copy backwards (32 byte blocks)                :   1620.9 MB/s (3, 0.3%)
 C copy backwards (64 byte blocks)                :   1627.0 MB/s (3, 0.4%)
 C copy                                           :   1665.9 MB/s (3, 1.0%)
 C copy prefetched (32 bytes step)                :   1252.3 MB/s (2)
 C copy prefetched (64 bytes step)                :   1398.0 MB/s (2)
 C 2-pass copy                                    :   1456.3 MB/s (2)
 C 2-pass copy prefetched (32 bytes step)         :    999.6 MB/s (2)
 C 2-pass copy prefetched (64 bytes step)         :    966.3 MB/s (2)
 C scan 8                                         :    275.4 MB/s (2)
 C scan 16                                        :    542.4 MB/s (3, 0.2%)
 C scan 32                                        :   1027.4 MB/s (3, 0.2%)
 C scan 64                                        :   1805.6 MB/s (3, 1.1%)
 C fill                                           :   7769.5 MB/s (2)
 C fill (shuffle within 16 byte blocks)           :   7769.3 MB/s (2)
 C fill (shuffle within 32 byte blocks)           :   7771.2 MB/s (2)
 C fill (shuffle within 64 byte blocks)           :   7765.9 MB/s (2)
 ---
 libc memcpy copy                                 :   1673.7 MB/s (2)
 libc memchr scan                                 :   1751.2 MB/s (3, 1.2%)
 libc memset fill                                 :   7820.4 MB/s (3, 0.1%)
 ---
 NEON LDP/STP copy                                :   1711.3 MB/s (2)
 NEON LDP/STP copy pldl2strm (32 bytes step)      :   1139.8 MB/s (2)
 NEON LDP/STP copy pldl2strm (64 bytes step)      :   1435.1 MB/s (2)
 NEON LDP/STP copy pldl1keep (32 bytes step)      :   1824.1 MB/s (2)
 NEON LDP/STP copy pldl1keep (64 bytes step)      :   1828.9 MB/s (2)
 NEON LD1/ST1 copy                                :   1707.6 MB/s (3, 1.0%)
 NEON LDP load                                    :   2623.2 MB/s (2)
 NEON LDNP load                                   :   2052.5 MB/s (3, 0.2%)
 NEON STP fill                                    :   7814.3 MB/s (3, 0.1%)
 NEON STNP fill                                   :   2103.9 MB/s (3, 1.5%)
 ARM LDP/STP copy                                 :   1710.9 MB/s (3)
 ARM LDP load                                     :   2623.8 MB/s (2)
 ARM LDNP load                                    :   2052.8 MB/s (2)
 ARM STP fill                                     :   7816.6 MB/s (3, 0.1%)
 ARM STNP fill                                    :   2114.6 MB/s (3, 1.4%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON LDP/STP copy (from framebuffer)             :   1826.3 MB/s (3, 0.1%)
 NEON LDP/STP 2-pass copy (from framebuffer)      :   1467.4 MB/s (3, 0.7%)
 NEON LD1/ST1 copy (from framebuffer)             :   1798.9 MB/s (3, 0.6%)
 NEON LD1/ST1 2-pass copy (from framebuffer)      :   1447.1 MB/s (2)
 ARM LDP/STP copy (from framebuffer)              :   1821.1 MB/s (3, 0.1%)
 ARM LDP/STP 2-pass copy (from framebuffer)       :   1468.2 MB/s (2)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.0 ns 
     65536 :    5.0 ns          /     8.2 ns 
    131072 :    7.7 ns          /    11.3 ns 
    262144 :    9.5 ns          /    12.7 ns 
    524288 :   11.9 ns          /    14.9 ns 
   1048576 :   87.6 ns          /   135.1 ns 
   2097152 :  129.5 ns          /   175.9 ns 
   4194304 :  154.7 ns          /   195.8 ns 
   8388608 :  169.3 ns          /   207.0 ns 
  16777216 :  177.8 ns          /   213.7 ns 
  33554432 :  183.0 ns          /   218.3 ns 
  67108864 :  185.6 ns          /   221.1 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.1 ns          /     0.0 ns 
     65536 :    5.0 ns          /     8.2 ns 
    131072 :    7.7 ns          /    11.4 ns 
    262144 :    9.4 ns          /    12.6 ns 
    524288 :   12.3 ns          /    14.4 ns 
   1048576 :   87.8 ns          /   135.2 ns 
   2097152 :  128.9 ns          /   175.0 ns 
   4194304 :  149.2 ns          /   188.5 ns 
   8388608 :  159.2 ns          /   193.4 ns 
  16777216 :  164.2 ns          /   195.4 ns 
  33554432 :  166.7 ns          /   196.4 ns 
  67108864 :  168.0 ns          /   196.8 ns 

Executing benchmark on cpu4 (Cortex-A72):

tinymembench v0.4.9-nuumio (simple benchmark for memory throughput and latency)

CFLAGS: 
bandwidth test min repeats (-b): 2
bandwidth test max repeats (-B): 3
bandwidth test mem realloc (-M): no      (-m for realloc)
      latency test repeats (-l): 3
        latency test count (-c): 1000000

==========================================================================
== Memory bandwidth tests                                               ==
==                                                                      ==
== Note 1: 1MB = 1000000 bytes                                          ==
== Note 2: Test result is the best of repeated runs. Number of repeats  ==
==         is shown in brackets                                         ==
== Note 3: Results for 'copy' tests show how many bytes can be          ==
==         copied per second (adding together read and writen           ==
==         bytes would have provided twice higher numbers)              ==
== Note 4: 2-pass copy means that we are using a small temporary buffer ==
==         to first fetch data into it, and only then write it to the   ==
==         destination (source -> L1 cache, L1 cache -> destination)    ==
== Note 5: If sample standard deviation exceeds 0.1%, it is shown in    ==
==         brackets                                                     ==
==========================================================================

 C copy backwards                                 :   3249.6 MB/s (2)
 C copy backwards (32 byte blocks)                :   3251.5 MB/s (2)
 C copy backwards (64 byte blocks)                :   3254.3 MB/s (2)
 C copy                                           :   3162.0 MB/s (2)
 C copy prefetched (32 bytes step)                :   3150.8 MB/s (2)
 C copy prefetched (64 bytes step)                :   3150.3 MB/s (2)
 C 2-pass copy                                    :   2898.3 MB/s (2)
 C 2-pass copy prefetched (32 bytes step)         :   2970.2 MB/s (2)
 C 2-pass copy prefetched (64 bytes step)         :   2970.2 MB/s (2)
 C scan 8                                         :    891.6 MB/s (2)
 C scan 16                                        :   1773.9 MB/s (2)
 C scan 32                                        :   3483.1 MB/s (2)
 C scan 64                                        :   6178.0 MB/s (2)
 C fill                                           :   7829.6 MB/s (3, 0.5%)
 C fill (shuffle within 16 byte blocks)           :   7881.3 MB/s (3, 0.2%)
 C fill (shuffle within 32 byte blocks)           :   7901.1 MB/s (2)
 C fill (shuffle within 64 byte blocks)           :   7907.1 MB/s (2)
 ---
 libc memcpy copy                                 :   3153.7 MB/s (2)
 libc memchr scan                                 :   5993.9 MB/s (2)
 libc memset fill                                 :   7831.5 MB/s (3, 0.5%)
 ---
 NEON LDP/STP copy                                :   3164.2 MB/s (2)
 NEON LDP/STP copy pldl2strm (32 bytes step)      :   3153.8 MB/s (2)
 NEON LDP/STP copy pldl2strm (64 bytes step)      :   3153.4 MB/s (2)
 NEON LDP/STP copy pldl1keep (32 bytes step)      :   3148.9 MB/s (2)
 NEON LDP/STP copy pldl1keep (64 bytes step)      :   3148.7 MB/s (3, 1.4%)
 NEON LD1/ST1 copy                                :   3163.0 MB/s (2)
 NEON LDP load                                    :   6493.9 MB/s (2)
 NEON LDNP load                                   :   6522.7 MB/s (2)
 NEON STP fill                                    :   7827.2 MB/s (3, 0.5%)
 NEON STNP fill                                   :   7833.9 MB/s (2)
 ARM LDP/STP copy                                 :   3163.1 MB/s (2)
 ARM LDP load                                     :   6493.8 MB/s (2)
 ARM LDNP load                                    :   6523.3 MB/s (2)
 ARM STP fill                                     :   7821.6 MB/s (3, 0.5%)
 ARM STNP fill                                    :   7829.5 MB/s (3, 0.1%)

==========================================================================
== Framebuffer read tests.                                              ==
==                                                                      ==
== Many ARM devices use a part of the system memory as the framebuffer, ==
== typically mapped as uncached but with write-combining enabled.       ==
== Writes to such framebuffers are quite fast, but reads are much       ==
== slower and very sensitive to the alignment and the selection of      ==
== CPU instructions which are used for accessing memory.                ==
==                                                                      ==
== Many x86 systems allocate the framebuffer in the GPU memory,         ==
== accessible for the CPU via a relatively slow PCI-E bus. Moreover,    ==
== PCI-E is asymmetric and handles reads a lot worse than writes.       ==
==                                                                      ==
== If uncached framebuffer reads are reasonably fast (at least 100 MB/s ==
== or preferably >300 MB/s), then using the shadow framebuffer layer    ==
== is not necessary in Xorg DDX drivers, resulting in a nice overall    ==
== performance improvement. For example, the xf86-video-fbturbo DDX     ==
== uses this trick.                                                     ==
==========================================================================

 NEON LDP/STP copy (from framebuffer)             :   3443.3 MB/s (2)
 NEON LDP/STP 2-pass copy (from framebuffer)      :   3175.1 MB/s (2)
 NEON LD1/ST1 copy (from framebuffer)             :   3443.2 MB/s (2)
 NEON LD1/ST1 2-pass copy (from framebuffer)      :   3117.1 MB/s (3, 1.1%)
 ARM LDP/STP copy (from framebuffer)              :   3445.1 MB/s (2)
 ARM LDP/STP 2-pass copy (from framebuffer)       :   3176.8 MB/s (2)

==========================================================================
== Memory latency test                                                  ==
==                                                                      ==
== Average time is measured for random memory accesses in the buffers   ==
== of different sizes. The larger is the buffer, the more significant   ==
== are relative contributions of TLB, L1/L2 cache misses and SDRAM      ==
== accesses. For extremely large buffer sizes we are expecting to see   ==
== page table walk with several requests to SDRAM for almost every      ==
== memory access (though 64MiB is not nearly large enough to experience ==
== this effect to its fullest).                                         ==
==                                                                      ==
== Note 1: All the numbers are representing extra time, which needs to  ==
==         be added to L1 cache latency. The cycle timings for L1 cache ==
==         latency can be usually found in the processor documentation. ==
== Note 2: Dual random read means that we are simultaneously performing ==
==         two independent memory accesses at a time. In the case if    ==
==         the memory subsystem can't handle multiple outstanding       ==
==         requests, dual random read has the same timings as two       ==
==         single reads performed one after another.                    ==
==========================================================================

block size : single random read / dual random read, [MADV_NOHUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.6 ns          /     7.1 ns 
    131072 :    7.0 ns          /     9.6 ns 
    262144 :   10.1 ns          /    12.8 ns 
    524288 :   12.0 ns          /    14.6 ns 
   1048576 :   33.3 ns          /    52.2 ns 
   2097152 :  101.8 ns          /   153.4 ns 
   4194304 :  142.5 ns          /   191.6 ns 
   8388608 :  167.1 ns          /   212.2 ns 
  16777216 :  179.5 ns          /   219.8 ns 
  33554432 :  186.5 ns          /   225.7 ns 
  67108864 :  197.7 ns          /   241.3 ns 

block size : single random read / dual random read, [MADV_HUGEPAGE]
      1024 :    0.0 ns          /     0.0 ns 
      2048 :    0.0 ns          /     0.0 ns 
      4096 :    0.0 ns          /     0.0 ns 
      8192 :    0.0 ns          /     0.0 ns 
     16384 :    0.0 ns          /     0.0 ns 
     32768 :    0.0 ns          /     0.0 ns 
     65536 :    4.6 ns          /     7.1 ns 
    131072 :    6.9 ns          /     9.6 ns 
    262144 :    8.2 ns          /    10.5 ns 
    524288 :    9.2 ns          /    10.9 ns 
   1048576 :   15.5 ns          /    21.4 ns 
   2097152 :   98.6 ns          /   150.6 ns 
   4194304 :  138.3 ns          /   188.2 ns 
   8388608 :  156.4 ns          /   198.3 ns 
  16777216 :  166.7 ns          /   202.8 ns 
  33554432 :  172.2 ns          /   207.2 ns 
  67108864 :  176.1 ns          /   208.4 ns 

##########################################################################

Executing ramlat on cpu0 (Cortex-A53), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 2.885 2.843 2.133 2.129 2.124 2.124 2.920 5.929 
         8k: 2.832 2.832 2.124 2.125 2.124 2.124 2.921 5.939 
        16k: 2.833 2.832 2.124 2.125 2.124 2.125 2.921 5.933 
        32k: 6.194 7.994 5.780 7.618 5.784 7.776 11.61 20.66 
        64k: 19.62 18.84 16.52 18.15 16.51 18.30 24.61 46.81 
       128k: 19.93 20.54 19.78 20.18 19.77 20.30 27.56 53.87 
       256k: 18.93 19.54 19.13 19.50 19.14 19.57 27.26 54.65 
       512k: 40.05 46.68 39.73 46.41 39.67 65.65 68.55 122.1 
      1024k: 166.3 169.8 165.5 166.1 165.8 167.7 224.9 419.3 
      2048k: 178.4 180.1 176.8 178.1 176.8 178.0 228.8 436.3 
      4096k: 186.5 187.8 185.4 186.9 185.5 186.7 231.2 434.6 
      8192k: 186.4 188.0 185.5 187.1 185.5 187.0 232.9 452.9 
     16384k: 192.6 196.2 192.0 195.7 191.9 195.6 243.8 461.5 
     32768k: 194.7 198.2 194.1 198.1 194.3 197.8 245.6 463.2 
     65536k: 195.1 199.4 194.7 204.2 194.7 199.5 245.6 460.0 
    131072k: 198.1 201.5 197.1 201.2 197.2 200.5 242.2 457.9 

Executing ramlat on cpu4 (Cortex-A72), results in ns:

       size:  1x32  2x32  1x64  2x64 1xPTR 2xPTR 4xPTR 8xPTR
         4k: 2.783 2.781 2.781 2.781 2.225 2.225 2.225 4.449 
         8k: 2.781 2.783 2.781 2.781 2.225 2.225 2.376 4.450 
        16k: 7.249 7.665 7.250 7.671 6.943 7.206 10.21 19.73 
        32k: 7.789 7.789 7.788 7.789 7.543 7.658 9.593 13.23 
        64k: 10.98 11.66 10.98 11.66 10.44 13.21 24.68 47.56 
       128k: 11.69 11.95 11.68 11.89 11.13 13.43 25.70 51.70 
       256k: 16.56 16.63 16.54 16.62 15.99 16.80 26.25 51.67 
       512k: 16.65 16.71 16.62 16.70 16.06 16.75 26.74 51.66 
      1024k: 92.59 77.30 84.41 77.73 87.73 81.82 79.01 106.9 
      2048k: 152.3 145.2 149.7 145.4 152.2 153.8 162.2 202.9 
      4096k: 171.2 172.7 175.7 174.7 177.3 172.8 182.3 233.0 
      8192k: 195.6 193.7 194.5 194.4 194.9 194.6 197.8 241.4 
     16384k: 198.4 200.0 200.4 200.8 200.5 202.2 206.1 248.7 
     32768k: 199.5 201.9 199.8 201.8 198.8 206.5 214.4 252.0 
     65536k: 210.7 212.4 210.9 212.9 208.2 217.0 227.9 255.0 
    131072k: 215.3 214.2 211.8 215.3 209.2 219.8 232.3 261.6 

##########################################################################

Executing benchmark on each cluster individually

OpenSSL 3.0.9, built on 30 May 2023 (Library: OpenSSL 3.0.9 30 May 2023)
type             16 bytes     64 bytes    256 bytes   1024 bytes   8192 bytes  16384 bytes
aes-128-cbc     102721.50k   319931.80k   653212.25k   926283.78k  1054026.41k  1064151.72k (Cortex-A53)
aes-128-cbc     305890.91k   728389.14k  1118099.29k  1274293.93k  1349246.98k  1353149.10k (Cortex-A72)
aes-192-cbc      97391.50k   285262.19k   538343.77k   717541.03k   794192.55k   800156.33k (Cortex-A53)
aes-192-cbc     284807.77k   668512.49k   963028.39k  1129574.40k  1189623.13k  1188145.83k (Cortex-A72)
aes-256-cbc      96281.48k   268473.83k   473314.82k   603656.87k   656100.01k   659996.67k (Cortex-A53)
aes-256-cbc     279235.26k   618690.58k   881811.54k   976310.27k  1020816.04k  1020876.12k (Cortex-A72)

##########################################################################

Executing benchmark single-threaded on cpu0 (Cortex-A53)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: 64000000 64000000 64000000 - - - - - 2048000000

RAM size:    3863 MB,  # CPU hardware threads:   6
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:        837   100    815    815  |      15619   100   1334   1334
23:        789   100    804    804  |      15324   100   1327   1326
24:        748   100    804    804  |      15005   100   1317   1317
25:        702   100    802    802  |      14622   100   1302   1302
----------------------------------  | ------------------------------
Avr:             100    806    806  |              100   1320   1320
Tot:             100   1063   1063

Executing benchmark single-threaded on cpu4 (Cortex-A72)

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    3863 MB,  # CPU hardware threads:   6
RAM usage:    435 MB,  # Benchmark threads:      1

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       1583   100   1540   1540  |      22662   100   1935   1935
23:       1490   100   1519   1519  |      22276   100   1928   1928
24:       1411   100   1518   1518  |      21843   100   1918   1918
25:       1310   100   1496   1496  |      21299   100   1896   1896
----------------------------------  | ------------------------------
Avr:             100   1518   1518  |              100   1919   1919
Tot:             100   1719   1719

##########################################################################

Executing benchmark 3 times multi-threaded on CPUs 0-5

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    3863 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       5064   562    877   4927  |      93269   524   1517   7954
23:       4793   569    859   4884  |      91068   523   1506   7880
24:       4272   525    875   4594  |      89091   524   1493   7820
25:       4367   573    871   4987  |      87174   527   1472   7758
----------------------------------  | ------------------------------
Avr:             557    871   4848  |              525   1497   7853
Tot:             541   1184   6351

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: - - - - - - - - -

RAM size:    3863 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       5079   556    889   4941  |      93413   524   1520   7966
23:       4906   577    866   4999  |      91172   524   1506   7889
24:       4477   552    872   4814  |      89419   525   1494   7849
25:       4397   576    872   5021  |      86991   524   1478   7742
----------------------------------  | ------------------------------
Avr:             565    875   4944  |              524   1500   7861
Tot:             545   1187   6403

7-Zip (a) [64] 16.02 : Copyright (c) 1999-2016 Igor Pavlov : 2016-05-21
p7zip Version 16.02 (locale=C,Utf16=off,HugeFiles=on,64 bits,6 CPUs LE)

LE
CPU Freq: 64000000 - - - - - - - -

RAM size:    3863 MB,  # CPU hardware threads:   6
RAM usage:   1323 MB,  # Benchmark threads:      6

                       Compressing  |                  Decompressing
Dict     Speed Usage    R/U Rating  |      Speed Usage    R/U Rating
         KiB/s     %   MIPS   MIPS  |      KiB/s     %   MIPS   MIPS

22:       5313   581    890   5169  |      93408   524   1519   7966
23:       4852   560    883   4945  |      91324   524   1508   7902
24:       4721   581    874   5077  |      89349   524   1496   7842
25:       4305   562    874   4916  |      87140   525   1478   7755
----------------------------------  | ------------------------------
Avr:             571    880   5027  |              524   1500   7866
Tot:             548   1190   6446

Compression: 4848,4944,5027
Decompression: 7853,7861,7866
Total: 6351,6403,6446

##########################################################################

** cpuminer-multi 1.3.7 by tpruvot@github **
BTC donation address: 1FhDPLPpw18X4srecguG3MxJYe4a1JsZnd (tpruvot)

[2023-10-01 19:06:37] 6 miner threads started, using 'scrypt' algorithm.
[2023-10-01 19:06:37] CPU #5: 2.04 kH/s
[2023-10-01 19:06:37] CPU #4: 1.84 kH/s
[2023-10-01 19:06:37] CPU #2: 1.30 kH/s
[2023-10-01 19:06:37] CPU #0: 1.28 kH/s
[2023-10-01 19:06:37] CPU #1: 1.28 kH/s
[2023-10-01 19:06:37] CPU #3: 1.28 kH/s
[2023-10-01 19:06:42] Total: 9.32 kH/s
[2023-10-01 19:06:46] CPU #5: 2.22 kH/s
[2023-10-01 19:06:46] Total: 9.75 kH/s
[2023-10-01 19:06:47] CPU #3: 1.35 kH/s
[2023-10-01 19:06:47] CPU #1: 1.34 kH/s
[2023-10-01 19:06:47] CPU #0: 1.34 kH/s
[2023-10-01 19:06:47] CPU #2: 1.34 kH/s
[2023-10-01 19:06:47] CPU #4: 2.22 kH/s
[2023-10-01 19:06:47] Total: 9.81 kH/s
[2023-10-01 19:06:52] CPU #5: 2.22 kH/s
[2023-10-01 19:06:52] Total: 9.82 kH/s
[2023-10-01 19:06:57] CPU #3: 1.35 kH/s
[2023-10-01 19:06:57] CPU #1: 1.34 kH/s
[2023-10-01 19:06:57] CPU #0: 1.34 kH/s
[2023-10-01 19:06:57] CPU #2: 1.34 kH/s
[2023-10-01 19:06:57] CPU #4: 2.22 kH/s
[2023-10-01 19:06:57] Total: 9.82 kH/s
[2023-10-01 19:07:02] CPU #5: 2.22 kH/s
[2023-10-01 19:07:02] Total: 9.82 kH/s
[2023-10-01 19:07:07] CPU #3: 1.35 kH/s
[2023-10-01 19:07:07] CPU #1: 1.34 kH/s
[2023-10-01 19:07:07] CPU #0: 1.34 kH/s
[2023-10-01 19:07:07] CPU #2: 1.34 kH/s
[2023-10-01 19:07:07] CPU #4: 2.22 kH/s
[2023-10-01 19:07:07] Total: 9.82 kH/s
[2023-10-01 19:07:12] CPU #5: 2.22 kH/s
[2023-10-01 19:07:12] Total: 9.82 kH/s
[2023-10-01 19:07:17] CPU #3: 1.35 kH/s
[2023-10-01 19:07:17] CPU #1: 1.34 kH/s
[2023-10-01 19:07:17] CPU #0: 1.34 kH/s
[2023-10-01 19:07:17] CPU #2: 1.34 kH/s
[2023-10-01 19:07:17] CPU #4: 2.22 kH/s
[2023-10-01 19:07:17] Total: 9.82 kH/s
[2023-10-01 19:07:22] CPU #5: 2.22 kH/s
[2023-10-01 19:07:22] Total: 9.82 kH/s
[2023-10-01 19:07:27] CPU #3: 1.35 kH/s
[2023-10-01 19:07:27] CPU #1: 1.34 kH/s
[2023-10-01 19:07:27] CPU #0: 1.34 kH/s
[2023-10-01 19:07:27] CPU #2: 1.34 kH/s
[2023-10-01 19:07:27] CPU #4: 2.20 kH/s
[2023-10-01 19:07:27] Total: 9.79 kH/s
[2023-10-01 19:07:32] CPU #5: 2.22 kH/s
[2023-10-01 19:07:32] Total: 9.82 kH/s
[2023-10-01 19:07:37] CPU #3: 1.35 kH/s
[2023-10-01 19:07:37] CPU #1: 1.34 kH/s
[2023-10-01 19:07:37] CPU #0: 1.34 kH/s
[2023-10-01 19:07:37] CPU #2: 1.34 kH/s
[2023-10-01 19:07:37] CPU #4: 2.22 kH/s
[2023-10-01 19:07:37] Total: 9.82 kH/s
[2023-10-01 19:07:42] CPU #5: 2.22 kH/s
[2023-10-01 19:07:42] Total: 9.82 kH/s
[2023-10-01 19:07:47] CPU #3: 1.35 kH/s
[2023-10-01 19:07:47] CPU #1: 1.34 kH/s
[2023-10-01 19:07:47] CPU #0: 1.34 kH/s
[2023-10-01 19:07:47] CPU #2: 1.34 kH/s
[2023-10-01 19:07:47] CPU #4: 2.22 kH/s
[2023-10-01 19:07:47] Total: 9.82 kH/s
[2023-10-01 19:07:52] CPU #5: 2.22 kH/s
[2023-10-01 19:07:52] Total: 9.82 kH/s
[2023-10-01 19:07:57] CPU #3: 1.35 kH/s
[2023-10-01 19:07:57] CPU #1: 1.34 kH/s
[2023-10-01 19:07:57] CPU #0: 1.34 kH/s
[2023-10-01 19:07:57] CPU #2: 1.34 kH/s
[2023-10-01 19:07:57] CPU #4: 2.22 kH/s
[2023-10-01 19:07:57] Total: 9.82 kH/s
[2023-10-01 19:08:02] CPU #5: 2.22 kH/s
[2023-10-01 19:08:02] Total: 9.82 kH/s
[2023-10-01 19:08:07] CPU #3: 1.35 kH/s
[2023-10-01 19:08:07] CPU #1: 1.34 kH/s
[2023-10-01 19:08:07] CPU #0: 1.34 kH/s
[2023-10-01 19:08:07] CPU #2: 1.34 kH/s
[2023-10-01 19:08:07] CPU #4: 2.22 kH/s
[2023-10-01 19:08:07] Total: 9.82 kH/s
[2023-10-01 19:08:12] CPU #5: 2.21 kH/s
[2023-10-01 19:08:12] Total: 9.79 kH/s
[2023-10-01 19:08:17] CPU #3: 1.35 kH/s
[2023-10-01 19:08:17] CPU #1: 1.34 kH/s
[2023-10-01 19:08:17] CPU #0: 1.34 kH/s
[2023-10-01 19:08:17] CPU #2: 1.34 kH/s
[2023-10-01 19:08:17] CPU #4: 2.22 kH/s
[2023-10-01 19:08:17] Total: 9.82 kH/s
[2023-10-01 19:08:22] CPU #5: 2.22 kH/s
[2023-10-01 19:08:22] Total: 9.82 kH/s
[2023-10-01 19:08:27] CPU #3: 1.35 kH/s
[2023-10-01 19:08:27] CPU #1: 1.34 kH/s
[2023-10-01 19:08:27] CPU #0: 1.34 kH/s
[2023-10-01 19:08:27] CPU #2: 1.34 kH/s
[2023-10-01 19:08:27] CPU #4: 2.22 kH/s
[2023-10-01 19:08:27] Total: 9.82 kH/s
[2023-10-01 19:08:32] CPU #5: 2.22 kH/s
[2023-10-01 19:08:32] Total: 9.82 kH/s
[2023-10-01 19:08:37] CPU #3: 1.35 kH/s
[2023-10-01 19:08:37] CPU #0: 1.34 kH/s
[2023-10-01 19:08:37] CPU #1: 1.34 kH/s
[2023-10-01 19:08:37] CPU #2: 1.34 kH/s
[2023-10-01 19:08:37] CPU #4: 2.22 kH/s
[2023-10-01 19:08:37] Total: 9.82 kH/s
[2023-10-01 19:08:42] CPU #5: 2.22 kH/s
[2023-10-01 19:08:42] Total: 9.82 kH/s
[2023-10-01 19:08:47] CPU #3: 1.35 kH/s
[2023-10-01 19:08:47] CPU #0: 1.34 kH/s
[2023-10-01 19:08:47] CPU #1: 1.34 kH/s
[2023-10-01 19:08:47] CPU #2: 1.34 kH/s
[2023-10-01 19:08:47] CPU #4: 2.22 kH/s
[2023-10-01 19:08:47] Total: 9.82 kH/s
[2023-10-01 19:08:52] CPU #5: 2.22 kH/s
[2023-10-01 19:08:52] Total: 9.81 kH/s
[2023-10-01 19:08:57] CPU #3: 1.35 kH/s
[2023-10-01 19:08:57] CPU #1: 1.34 kH/s
[2023-10-01 19:08:57] CPU #0: 1.34 kH/s
[2023-10-01 19:08:57] CPU #2: 1.34 kH/s
[2023-10-01 19:08:57] CPU #4: 2.21 kH/s
[2023-10-01 19:08:57] Total: 9.80 kH/s
[2023-10-01 19:09:02] CPU #5: 2.22 kH/s
[2023-10-01 19:09:02] Total: 9.81 kH/s
[2023-10-01 19:09:07] CPU #3: 1.35 kH/s
[2023-10-01 19:09:07] CPU #1: 1.34 kH/s
[2023-10-01 19:09:07] CPU #0: 1.34 kH/s
[2023-10-01 19:09:07] CPU #2: 1.34 kH/s
[2023-10-01 19:09:07] CPU #4: 2.22 kH/s
[2023-10-01 19:09:07] Total: 9.82 kH/s
[2023-10-01 19:09:12] CPU #5: 2.22 kH/s
[2023-10-01 19:09:12] Total: 9.82 kH/s
[2023-10-01 19:09:17] CPU #3: 1.35 kH/s
[2023-10-01 19:09:17] CPU #0: 1.34 kH/s
[2023-10-01 19:09:17] CPU #1: 1.33 kH/s
[2023-10-01 19:09:17] CPU #2: 1.34 kH/s
[2023-10-01 19:09:17] CPU #4: 2.12 kH/s
[2023-10-01 19:09:17] Total: 9.68 kH/s
[2023-10-01 19:09:22] CPU #5: 2.22 kH/s
[2023-10-01 19:09:22] Total: 9.80 kH/s
[2023-10-01 19:09:27] CPU #3: 1.35 kH/s
[2023-10-01 19:09:27] CPU #0: 1.34 kH/s
[2023-10-01 19:09:27] CPU #1: 1.34 kH/s
[2023-10-01 19:09:27] CPU #2: 1.34 kH/s
[2023-10-01 19:09:27] CPU #4: 2.22 kH/s
[2023-10-01 19:09:27] Total: 9.82 kH/s
[2023-10-01 19:09:32] CPU #5: 2.22 kH/s
[2023-10-01 19:09:32] Total: 9.82 kH/s
[2023-10-01 19:09:37] CPU #3: 1.35 kH/s
[2023-10-01 19:09:37] CPU #0: 1.34 kH/s
[2023-10-01 19:09:37] CPU #1: 1.34 kH/s
[2023-10-01 19:09:37] CPU #2: 1.34 kH/s
[2023-10-01 19:09:37] CPU #4: 2.21 kH/s
[2023-10-01 19:09:37] Total: 9.80 kH/s
[2023-10-01 19:09:42] CPU #5: 2.22 kH/s
[2023-10-01 19:09:42] Total: 9.81 kH/s
[2023-10-01 19:09:47] CPU #3: 1.35 kH/s
[2023-10-01 19:09:47] CPU #0: 1.34 kH/s
[2023-10-01 19:09:47] CPU #1: 1.34 kH/s
[2023-10-01 19:09:47] CPU #2: 1.34 kH/s
[2023-10-01 19:09:47] CPU #4: 2.22 kH/s
[2023-10-01 19:09:47] Total: 9.82 kH/s
[2023-10-01 19:09:52] CPU #5: 2.22 kH/s
[2023-10-01 19:09:52] Total: 9.82 kH/s
[2023-10-01 19:09:57] CPU #3: 1.35 kH/s
[2023-10-01 19:09:57] CPU #0: 1.34 kH/s
[2023-10-01 19:09:57] CPU #1: 1.34 kH/s
[2023-10-01 19:09:57] CPU #2: 1.34 kH/s
[2023-10-01 19:09:57] CPU #4: 2.22 kH/s
[2023-10-01 19:09:57] Total: 9.82 kH/s
[2023-10-01 19:10:02] CPU #5: 2.22 kH/s
[2023-10-01 19:10:02] Total: 9.82 kH/s
[2023-10-01 19:10:07] CPU #3: 1.35 kH/s
[2023-10-01 19:10:07] CPU #0: 1.34 kH/s
[2023-10-01 19:10:07] CPU #1: 1.34 kH/s
[2023-10-01 19:10:07] CPU #2: 1.34 kH/s
[2023-10-01 19:10:07] CPU #4: 2.22 kH/s
[2023-10-01 19:10:07] Total: 9.82 kH/s
[2023-10-01 19:10:12] CPU #5: 2.22 kH/s
[2023-10-01 19:10:12] Total: 9.82 kH/s
[2023-10-01 19:10:17] CPU #3: 1.35 kH/s
[2023-10-01 19:10:17] CPU #0: 1.35 kH/s
[2023-10-01 19:10:17] CPU #1: 1.34 kH/s
[2023-10-01 19:10:17] CPU #2: 1.34 kH/s
[2023-10-01 19:10:17] CPU #4: 2.22 kH/s
[2023-10-01 19:10:17] Total: 9.82 kH/s
[2023-10-01 19:10:22] CPU #5: 2.21 kH/s
[2023-10-01 19:10:22] Total: 9.79 kH/s
[2023-10-01 19:10:27] CPU #3: 1.35 kH/s
[2023-10-01 19:10:27] CPU #0: 1.34 kH/s
[2023-10-01 19:10:27] CPU #1: 1.34 kH/s
[2023-10-01 19:10:27] CPU #2: 1.34 kH/s
[2023-10-01 19:10:27] CPU #4: 2.22 kH/s
[2023-10-01 19:10:27] Total: 9.82 kH/s
[2023-10-01 19:10:32] CPU #5: 2.21 kH/s
[2023-10-01 19:10:32] Total: 9.81 kH/s
[2023-10-01 19:10:37] CPU #3: 1.35 kH/s
[2023-10-01 19:10:37] CPU #0: 1.34 kH/s
[2023-10-01 19:10:37] CPU #1: 1.34 kH/s
[2023-10-01 19:10:37] CPU #2: 1.34 kH/s
[2023-10-01 19:10:37] CPU #4: 2.22 kH/s
[2023-10-01 19:10:37] Total: 9.82 kH/s
[2023-10-01 19:10:42] CPU #5: 2.22 kH/s
[2023-10-01 19:10:42] Total: 9.82 kH/s
[2023-10-01 19:10:47] CPU #3: 1.35 kH/s
[2023-10-01 19:10:47] CPU #0: 1.34 kH/s
[2023-10-01 19:10:47] CPU #1: 1.34 kH/s
[2023-10-01 19:10:47] CPU #2: 1.34 kH/s
[2023-10-01 19:10:47] CPU #4: 2.22 kH/s
[2023-10-01 19:10:47] Total: 9.82 kH/s
[2023-10-01 19:10:52] CPU #5: 2.22 kH/s
[2023-10-01 19:10:52] Total: 9.82 kH/s
[2023-10-01 19:10:57] CPU #3: 1.35 kH/s
[2023-10-01 19:10:57] CPU #0: 1.34 kH/s
[2023-10-01 19:10:57] CPU #1: 1.34 kH/s
[2023-10-01 19:10:57] CPU #2: 1.34 kH/s
[2023-10-01 19:10:57] CPU #4: 2.22 kH/s
[2023-10-01 19:10:57] Total: 9.82 kH/s
[2023-10-01 19:11:02] CPU #5: 2.22 kH/s
[2023-10-01 19:11:02] Total: 9.82 kH/s
[2023-10-01 19:11:07] CPU #3: 1.35 kH/s
[2023-10-01 19:11:07] CPU #0: 1.34 kH/s
[2023-10-01 19:11:07] CPU #1: 1.34 kH/s
[2023-10-01 19:11:07] CPU #2: 1.34 kH/s
[2023-10-01 19:11:07] CPU #4: 2.20 kH/s
[2023-10-01 19:11:07] Total: 9.79 kH/s
[2023-10-01 19:11:12] CPU #5: 2.22 kH/s
[2023-10-01 19:11:12] Total: 9.82 kH/s
[2023-10-01 19:11:17] CPU #3: 1.35 kH/s
[2023-10-01 19:11:17] CPU #0: 1.34 kH/s
[2023-10-01 19:11:17] CPU #1: 1.34 kH/s
[2023-10-01 19:11:17] CPU #2: 1.34 kH/s
[2023-10-01 19:11:17] CPU #4: 2.22 kH/s
[2023-10-01 19:11:17] Total: 9.82 kH/s
[2023-10-01 19:11:22] CPU #5: 2.22 kH/s
[2023-10-01 19:11:22] Total: 9.82 kH/s
[2023-10-01 19:11:27] CPU #3: 1.35 kH/s
[2023-10-01 19:11:27] CPU #0: 1.34 kH/s
[2023-10-01 19:11:27] CPU #1: 1.34 kH/s
[2023-10-01 19:11:27] CPU #2: 1.34 kH/s
[2023-10-01 19:11:27] CPU #4: 2.22 kH/s
[2023-10-01 19:11:27] Total: 9.82 kH/s
[2023-10-01 19:11:32] CPU #5: 2.22 kH/s
[2023-10-01 19:11:32] Total: 9.82 kH/s

Total Scores: 9.82,9.81,9.80,9.79,9.68

##########################################################################

Testing maximum cpufreq again, still under full load. System health now:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
19:11:06: 1800/1416MHz  6.09 100%   0%  99%   0%   0%   0%  51.1Â°C

Checking cpufreq OPP for cpu0-cpu3 (Cortex-A53):

Cpufreq OPP: 1416    Measured: 1412 (1412.804/1412.786/1412.716)

Checking cpufreq OPP for cpu4-cpu5 (Cortex-A72):

Cpufreq OPP: 1800    Measured: 1798 (1798.317/1798.250/1798.227)

##########################################################################

Hardware sensors:

tcpm_source_psy_4_0022-i2c-4-22
in0:           0.00 V  (min =  +0.00 V, max =  +0.00 V)
curr1:         0.00 A  (max =  +0.00 A)

cpu_thermal-virtual-0
temp1:        +40.6 C  

gpu_thermal-virtual-0
temp1:        +38.8 C  

##########################################################################

Thermal source: /sys/class/hwmon/hwmon0/ (cpu_thermal)

System health while running tinymembench:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
18:52:17: 1800/1416MHz  0.95  10%   3%   5%   0%   1%   0%  31.7Â°C
18:52:37: 1800/1416MHz  0.96  16%   0%  16%   0%   0%   0%  31.1Â°C
18:52:57: 1800/1416MHz  0.97  16%   0%  16%   0%   0%   0%  31.1Â°C
18:53:17: 1800/1416MHz  0.98  16%   0%  16%   0%   0%   0%  31.1Â°C
18:53:37: 1800/1416MHz  0.99  16%   0%  16%   0%   0%   0%  31.1Â°C
18:53:57: 1800/1416MHz  0.99  16%   0%  16%   0%   0%   0%  38.8Â°C
18:54:18: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  35.6Â°C
18:54:38: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  36.2Â°C

System health while running ramlat:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
18:54:58: 1800/1416MHz  1.00  12%   2%   9%   0%   0%   0%  33.3Â°C
18:55:04: 1800/1416MHz  1.00  17%   0%  16%   0%   0%   0%  31.7Â°C
18:55:10: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  31.7Â°C
18:55:17: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  32.2Â°C
18:55:23: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  31.7Â°C
18:55:29: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  31.1Â°C
18:55:35: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  33.3Â°C
18:55:41: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  33.3Â°C
18:55:47: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  32.8Â°C
18:55:53: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  32.8Â°C
18:55:59: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  35.0Â°C

System health while running OpenSSL benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
18:56:04: 1800/1416MHz  1.00  13%   1%  10%   0%   0%   0%  32.8Â°C
18:56:20: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  31.1Â°C
18:56:37: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  36.9Â°C
18:56:53: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  31.7Â°C
18:57:09: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  38.1Â°C
18:57:25: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  31.7Â°C
18:57:41: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  38.1Â°C

System health while running 7-zip single core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
18:57:53: 1800/1416MHz  1.00  13%   1%  11%   0%   0%   0%  33.3Â°C
18:58:06: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  31.7Â°C
18:58:19: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  31.1Â°C
18:58:32: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  31.1Â°C
18:58:45: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  31.1Â°C
18:58:58: 1800/1416MHz  1.07  16%   0%  16%   0%   0%   0%  30.6Â°C
18:59:11: 1800/1416MHz  1.06  16%   0%  16%   0%   0%   0%  30.6Â°C
18:59:25: 1800/1416MHz  1.05  16%   0%  16%   0%   0%   0%  30.6Â°C
18:59:38: 1800/1416MHz  1.04  16%   0%  16%   0%   0%   0%  30.6Â°C
18:59:51: 1800/1416MHz  1.03  16%   0%  16%   0%   0%   0%  30.6Â°C
19:00:04: 1800/1416MHz  1.02  16%   0%  16%   0%   0%   0%  30.6Â°C
19:00:17: 1800/1416MHz  1.02  16%   0%  16%   0%   0%   0%  30.6Â°C
19:00:30: 1800/1416MHz  1.01  16%   0%  16%   0%   0%   0%  36.2Â°C
19:00:43: 1800/1416MHz  1.01  16%   0%  16%   0%   0%   0%  36.2Â°C
19:00:56: 1800/1416MHz  1.01  16%   0%  16%   0%   0%   0%  35.0Â°C
19:01:10: 1800/1416MHz  1.01  16%   0%  16%   0%   0%   0%  36.2Â°C
19:01:23: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  35.0Â°C
19:01:36: 1800/1416MHz  1.00  16%   0%  16%   0%   0%   0%  36.2Â°C

System health while running 7-zip multi core benchmark:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
19:01:45: 1800/1416MHz  1.00  14%   1%  13%   0%   0%   0%  36.9Â°C
19:01:58: 1800/1416MHz  1.99  97%   0%  96%   0%   0%   0%  41.1Â°C
19:02:09: 1800/1416MHz  2.72  84%   1%  82%   0%   0%   0%  40.0Â°C
19:02:19: 1800/1416MHz  3.22  96%   0%  96%   0%   0%   0%  42.2Â°C
19:02:30: 1800/1416MHz  3.36  82%   2%  80%   0%   0%   0%  40.6Â°C
19:02:42: 1800/1416MHz  3.69  87%   1%  86%   0%   0%   0%  42.8Â°C
19:02:53: 1800/1416MHz  4.06  76%   1%  74%   0%   0%   0%  41.7Â°C
19:03:03: 1800/1416MHz  4.51  99%   2%  97%   0%   0%   0%  39.4Â°C
19:03:17: 1800/1416MHz  4.89  92%   2%  90%   0%   0%   0%  43.3Â°C
19:03:28: 1800/1416MHz  4.84  87%   1%  86%   0%   0%   0%  42.2Â°C
19:03:38: 1800/1416MHz  5.02  95%   0%  95%   0%   0%   0%  43.3Â°C
19:03:51: 1800/1416MHz  4.87  81%   1%  80%   0%   0%   0%  43.9Â°C
19:04:02: 1800/1416MHz  5.12  83%   0%  82%   0%   0%   0%  42.8Â°C
19:04:16: 1800/1416MHz  5.09  92%   2%  90%   0%   0%   0%  44.4Â°C
19:04:26: 1800/1416MHz  5.07  79%   0%  78%   0%   0%   0%  42.8Â°C
19:04:37: 1800/1416MHz  5.57  99%   2%  97%   0%   0%   0%  41.1Â°C
19:04:47: 1800/1416MHz  5.48  97%   2%  94%   0%   0%   0%  41.7Â°C
19:04:57: 1800/1416MHz  5.40  90%   0%  89%   0%   0%   0%  44.4Â°C
19:05:10: 1800/1416MHz  5.34  88%   1%  86%   0%   0%   0%  45.0Â°C
19:05:21: 1800/1416MHz  5.28  85%   0%  85%   0%   0%   0%  43.3Â°C
19:05:34: 1800/1416MHz  5.59  97%   0%  96%   0%   0%   0%  45.0Â°C
19:05:44: 1800/1416MHz  5.51  80%   1%  79%   0%   0%   0%  43.9Â°C
19:05:57: 1800/1416MHz  5.73  97%   1%  96%   0%   0%   0%  45.6Â°C
19:06:07: 1800/1416MHz  5.65  77%   1%  76%   0%   0%   0%  43.3Â°C
19:06:19: 1800/1416MHz  5.78  99%   2%  97%   0%   0%   0%  43.3Â°C
19:06:33: 1800/1416MHz  5.81  89%   1%  87%   0%   0%   0%  45.0Â°C

System health while running cpuminer:

Time       big.LITTLE   load %cpu %sys %usr %nice %io %irq   Temp
19:06:42: 1800/1416MHz  5.59  34%   1%  32%   0%   0%   0%  47.5Â°C
19:07:26: 1800/1416MHz  5.90 100%   0%  99%   0%   0%   0%  48.8Â°C
19:08:10: 1800/1416MHz  5.99 100%   0%  99%   0%   0%   0%  50.0Â°C
19:08:54: 1800/1416MHz  6.04 100%   0%  99%   0%   0%   0%  50.0Â°C
19:09:38: 1800/1416MHz  6.12 100%   0%  99%   0%   0%   0%  50.6Â°C
19:10:22: 1800/1416MHz  6.10 100%   0%  99%   0%   0%   0%  51.1Â°C
19:11:06: 1800/1416MHz  6.09 100%   0%  99%   0%   0%   0%  51.1Â°C

##########################################################################

Linux 6.4.13-edge-rockchip64 (rockpro64) 	10/01/23 	_aarch64_	(6 CPU)

avg-cpu:  %user   %nice %system %iowait  %steal   %idle
          46.39    0.01    1.03    0.22    0.00   52.35

Device             tps    kB_read/s    kB_wrtn/s    kB_dscd/s    kB_read    kB_wrtn    kB_dscd
mmcblk1           4.80       183.09        62.29         0.00     263771      89733          0
zram0             0.04         0.82         0.00         0.00       1184          4          0
zram1             0.17         0.31         1.82         0.00        448       2624          0

               total        used        free      shared  buff/cache   available
Mem:           3.8Gi       241Mi       3.5Gi        13Mi       116Mi       3.5Gi
Swap:          1.9Gi          0B       1.9Gi

Filename				Type		Size		Used		Priority
/dev/zram0                              partition	1978120		0		5

CPU sysfs topology (clusters, cpufreq members, clockspeeds)
                 cpufreq   min    max
 CPU    cluster  policy   speed  speed   core type
  0        0        0      408    1416   Cortex-A53 / r0p4
  1        0        0      408    1416   Cortex-A53 / r0p4
  2        0        0      408    1416   Cortex-A53 / r0p4
  3        0        0      408    1416   Cortex-A53 / r0p4
  4        0        4      408    1800   Cortex-A72 / r0p2
  5        0        4      408    1800   Cortex-A72 / r0p2

Architecture:                       aarch64
CPU op-mode(s):                     32-bit, 64-bit
Byte Order:                         Little Endian
CPU(s):                             6
On-line CPU(s) list:                0-5
Vendor ID:                          ARM
Model name:                         Cortex-A53
Model:                              4
Thread(s) per core:                 1
Core(s) per socket:                 4
Socket(s):                          1
Stepping:                           r0p4
CPU(s) scaling MHz:                 100%
CPU max MHz:                        1416.0000
CPU min MHz:                        408.0000
BogoMIPS:                           48.00
Flags:                              fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid
Model name:                         Cortex-A72
Model:                              2
Thread(s) per core:                 1
Core(s) per socket:                 2
Socket(s):                          1
Stepping:                           r0p2
CPU(s) scaling MHz:                 100%
CPU max MHz:                        1800.0000
CPU min MHz:                        408.0000
BogoMIPS:                           48.00
Flags:                              fp asimd evtstrm aes pmull sha1 sha2 crc32 cpuid
NUMA node(s):                       1
NUMA node0 CPU(s):                  0-5
Vulnerability Gather data sampling: Not affected
Vulnerability Itlb multihit:        Not affected
Vulnerability L1tf:                 Not affected
Vulnerability Mds:                  Not affected
Vulnerability Meltdown:             Not affected
Vulnerability Mmio stale data:      Not affected
Vulnerability Retbleed:             Not affected
Vulnerability Spec rstack overflow: Not affected
Vulnerability Spec store bypass:    Not affected
Vulnerability Spectre v1:           Mitigation; __user pointer sanitization
Vulnerability Spectre v2:           Vulnerable: Unprivileged eBPF enabled
Vulnerability Srbds:                Not affected
Vulnerability Tsx async abort:      Not affected

SoC guess: Rockchip RK3399
DT compat: pine64,rockpro64-v2.1
           pine64,rockpro64
           rockchip,rk3399
 Compiler: /usr/bin/gcc (Debian 12.2.0-14) 12.2.0 / aarch64-linux-gnu
 Userland: arm64
   Kernel: 6.4.13-edge-rockchip64/aarch64
           CONFIG_HZ=250
           CONFIG_HZ_250=y
           CONFIG_PREEMPTION=y
           CONFIG_PREEMPT=y
           CONFIG_PREEMPT_BUILD=y
           CONFIG_PREEMPT_COUNT=y
           CONFIG_PREEMPT_NOTIFIERS=y
           CONFIG_PREEMPT_RCU=y

##########################################################################

6.4 has reached end-of-life on 2023-09-13 with version 6.4.16.
This 6.4.13 and all other 6.4 revisions are unsupported since then.

##########################################################################

   vdd_center: 950 mV (1350 mV max)
   vdd_cpu_b: 1200 mV (1500 mV max)
   vdd_cpu_l: 1125 mV (1350 mV max)
   vdd_gpu: 825 mV (1500 mV max)

   opp-table-0:
       408 MHz    825.0 mV
       600 MHz    825.0 mV
       816 MHz    850.0 mV
      1008 MHz    925.0 mV
      1200 MHz   1000.0 mV
      1416 MHz   1125.0 mV

   opp-table-1:
       408 MHz    825.0 mV
       600 MHz    825.0 mV
       816 MHz    825.0 mV
      1008 MHz    875.0 mV
      1200 MHz    950.0 mV
      1416 MHz   1025.0 mV
      1608 MHz   1100.0 mV
      1800 MHz   1200.0 mV

   opp-table-2:
       200 MHz    825.0 mV
       297 MHz    825.0 mV
       400 MHz    825.0 mV
       500 MHz    875.0 mV
       600 MHz    925.0 mV
       800 MHz   1100.0 mV

##########################################################################

Results validation:

  * Measured clockspeed not lower than advertised max CPU clockspeed
  * No swapping
  * Background activity (%system) OK
  * No throttling

Status of performance related governors found below /sys (w/o cpufreq):

  * ff9a0000.gpu: simple_ondemand / 200 MHz (powersave performance simple_ondemand / 200 297 400 500 600 800)

Status of performance related policies found below /sys:

  * /sys/module/pcie_aspm/parameters/policy: default [performance] powersave powersupersave

| Pine64 RockPro64 v2.1 | 1800/1416 MHz | 6.4 | Armbian 23.8.3 bookworm arm64 | 6400 | 1719 | 1020880 | 3150 | 7830 | 9.81 |
